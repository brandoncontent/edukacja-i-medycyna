{"version":3,"sources":["img/stoisko.jpg","Hooks/useWindowDimensions.js","Components/setupPoly.js","Components/stall.js","Hooks/useImageMap.js","App.js","reportWebVitals.js","index.js"],"names":["getWindowDimensions","window","width","innerWidth","height","innerHeight","makeStyles","table","minWidth","input","display","form","maxWidth","Stall","useState","windowDimensions","setWindowDimensions","useEffect","handleResize","addEventListener","removeEventListener","useWindowDimensions","prefilColor","fillcolor","name","areas","shape","coords","preFillColor","fillColor","url","getDefaultValues","imageMap","setImageMap","useImageMap","setIamgeMap","hoveredArea","setHoveredArea","area","onClick","e","console","log","Math","round","clientX","clientY","src","IMAGE_URL","map","open","focus","openPage","onMouseLeave","onMouseEnter","enterArea","imgWidth","imgHight","className","style","top","center","left","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0f586813.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/stoisko.9ba605ba.jpg\";","import { useState, useEffect } from 'react';\r\n\r\nfunction getWindowDimensions() {\r\n  const { innerWidth: width, innerHeight: height } = window;\r\n  return {\r\n    width,\r\n    height\r\n  };\r\n}\r\n\r\nexport default function useWindowDimensions() {\r\n  const [windowDimensions, setWindowDimensions] = useState(getWindowDimensions());\r\n\r\n  useEffect(() => {\r\n    function handleResize() {\r\n      setWindowDimensions(getWindowDimensions());\r\n    }\r\n\r\n    window.addEventListener('resize', handleResize);\r\n    return () => window.removeEventListener('resize', handleResize);\r\n  }, []);\r\n\r\n  return windowDimensions;\r\n}","import React, { useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nconst useStyles = makeStyles({\r\n    table: {\r\n        minWidth: 650,\r\n    },\r\n    input: {\r\n        display: 'flex',\r\n        width: 600\r\n    },\r\n    form: {\r\n        maxWidth: 600\r\n    }\r\n});\r\n\r\nfunction createData(name, coords, preFillColor, fillColor, url) {\r\n    let poly = \"poly\"\r\n    return { name, poly, coords, preFillColor, fillColor, url };\r\n}\r\n\r\nexport const SetupPoly = (props) => {\r\n    const classes = useStyles();\r\n    const [rows, setRows] = useState(props.imageMap.areas);\r\n    \r\n    const deleteRow = (area) => {\r\n        // Array.prototype.filter returns new array\r\n        // so we aren't mutating state here\r\n        const arrayCopy = rows.filter((row) => row.name !== area.name);\r\n        console.log(\"Delete\")\r\n        setRows(arrayCopy);\r\n        props.handleChange(arrayCopy)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <TableContainer component={Paper}>\r\n                <Table className={classes.table} aria-label=\"simple table\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell align=\"left\"></TableCell>\r\n                            <TableCell align=\"left\">Name</TableCell>\r\n                            <TableCell align=\"right\">Coords</TableCell>\r\n                            <TableCell align=\"right\">Prefilll color in rgba</TableCell>\r\n                            <TableCell align=\"right\">Fill color in rgba</TableCell>\r\n                            <TableCell align=\"right\">Url</TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {rows.map((row) => (\r\n                            <TableRow key={row.name}>\r\n                                <TableCell><IconButton aria-label=\"delete\" onClick={() => deleteRow(row)} >\r\n                                    <DeleteIcon />\r\n                                </IconButton></TableCell>\r\n                                <TableCell component=\"th\" scope=\"row\">{row.name}</TableCell>\r\n                                <TableCell align=\"right\">{row.coords.join(', ')}</TableCell>\r\n                                <TableCell align=\"right\">{row.preFillColor}</TableCell>\r\n                                <TableCell align=\"right\">{row.fillColor}</TableCell>\r\n                                <TableCell align=\"right\">{row.url}</TableCell>\r\n                            </TableRow>\r\n                        ))}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n            <form className={classes.form} noValidate autoComplete=\"off\">\r\n                <TextField className={classes.input} id=\"standard-basic\" label=\"Name\" />\r\n                <TextField className={classes.input} id=\"standard-basic\" label=\"Coords\" />\r\n                <TextField className={classes.input} id=\"standard-basic\" label=\"Prefilll color in rgba\" />\r\n                <TextField className={classes.input} id=\"standard-basic\" label=\"Fill color in rgba\" />\r\n                <TextField className={classes.input} id=\"standard-basic\" label=\"Url\" />\r\n            </form>\r\n            <Button variant=\"contained\" color=\"primary\">Add</Button>\r\n        </div>\r\n    );\r\n}","import React, { useState } from 'react';\r\nimport IMAGE_URL from '../img/stoisko.jpg';\r\nimport ImageMapper from 'react-image-mapper';\r\nimport useWindowDimensions from '../Hooks/useWindowDimensions.js'\r\nimport useImageMap from '../Hooks/useImageMap.js'\r\nimport {SetupPoly} from './setupPoly.js'\r\n\r\n//https://coldiary.github.io/react-image-mapper/\r\n//https://github.com/coldiary/react-image-mapper\r\nexport const Stall = () => {\r\n  let { height, width } = useWindowDimensions()\r\n  const {imageMap, setIamgeMap}  = useImageMap()\r\n  const imgWidth = 1776\r\n  const imgHight = 1080\r\n  let size =  1//width / imgWidth\r\n  const [hoveredArea, setHoveredArea] = useState(null);\r\n  const enterArea = (area) => {\r\n    setHoveredArea(area);\r\n  }\r\n  const leaveArea = (area) => {\r\n    setHoveredArea(null);\r\n  }\r\n  function updateAreas (areas) {\r\n    setIamgeMap(areas)\r\n  }\r\n  const logPosition = (e) => {\r\n    console.log('ON CLICK, clientX:', Math.round(e.clientX/size), 'clinentY', Math.round(e.clientY/size))\r\n  }\r\n  const openPage = (area) => {\r\n    window.open(area.url, '_blank').focus();\r\n  }\r\n  const getTipPosition = (area) => {\r\n    return { top: `${area.center[1]}px`, left: `${area.center[0]}px` };\r\n  }\r\n  \r\n  return <div onClick={logPosition}>\r\n    <ImageMapper \r\n    src={IMAGE_URL} \r\n    map={imageMap} \r\n    onClick={area => openPage(area)}\r\n    onMouseLeave={area => leaveArea(area)} \r\n    onMouseEnter={area => enterArea(area)} \r\n    width={imgWidth*size} \r\n    height={imgHight*size} \r\n    imgWidth={imgWidth} \r\n    />\r\n    {hoveredArea &&\r\n      <span className=\"tooltip\"\r\n        style={{ ...getTipPosition(hoveredArea) }}>\r\n        {hoveredArea && hoveredArea.name}\r\n      </span>\r\n    }\r\n    \r\n  </div>;\r\n};\r\n","import { useEffect, useState } from 'react';\r\n// function getDefaultValues(){\r\n//   return {\r\n//     name: \"my-map\",\r\n//     areas: [\r\n//     ]\r\n//   }\r\n// }\r\nfunction getDefaultValues(){\r\n  let prefilColor = ''//rgba(255, 255, 255, .4)\r\n  let fillcolor = 'rgba(255, 255, 255, .3)'\r\n  return {\r\n    name: \"my-map\",\r\n    areas: [\r\n      { \r\n        name: \"Pelęgnacja\", \r\n        shape: \"poly\", \r\n        coords: [115, 430, 288, 428, 285, 190, 112, 178], \r\n        preFillColor: prefilColor, \r\n        fillColor: fillcolor,\r\n        url: 'https://brandoncontent.pl/' \r\n      },\r\n      { \r\n        name: \"W ciąży\", \r\n        shape: \"poly\", \r\n        coords: [331, 426, 481, 425, 479, 202, 328, 194], \r\n        preFillColor: prefilColor, \r\n        fillColor: fillcolor,\r\n        url: 'https://brandoncontent.pl/' \r\n      },\r\n      { \r\n        name: \"Gazetka\", \r\n        shape: \"poly\", \r\n        coords: [526, 653, 610, 648, 603, 552, 519, 556], \r\n        preFillColor: prefilColor, \r\n        fillColor: fillcolor,\r\n        url: 'https://brandoncontent.pl/' \r\n      },\r\n      { \r\n        name: \"Youtube\", \r\n        shape: \"poly\", \r\n        coords: [818, 377, 1123, 377, 1123, 198, 818, 198], \r\n        preFillColor: prefilColor, \r\n        fillColor: fillcolor,\r\n        url: 'https://brandoncontent.pl/' \r\n      },\r\n      { \r\n        name: \"Baner\", \r\n        shape: \"poly\", \r\n        coords: [1523, 765, 1716, 797, 1723, 329, 1527, 333], \r\n        preFillColor: prefilColor, \r\n        fillColor: fillcolor,\r\n        url: 'https://brandoncontent.pl/' \r\n      },\r\n      { \r\n        name: \"Web\", \r\n        shape: \"circle\", \r\n        coords: [1320, 347, 21], \r\n        preFillColor: prefilColor, \r\n        fillColor: fillcolor,\r\n        url: 'https://brandoncontent.pl/' \r\n      },\r\n      { \r\n        name: \"Facebook\", \r\n        shape: \"circle\", \r\n        coords: [1320, 421, 22], \r\n        preFillColor: prefilColor, \r\n        fillColor: fillcolor,\r\n        url: 'https://brandoncontent.pl/' \r\n      },\r\n      { \r\n        name: \"Instagram\", \r\n        shape: \"poly\", \r\n        coords: [1301, 506, 1308, 512, 1333, 512, 1340, 504, 1340, 481, 1332, 474, 1307, 474, 1301, 481],\r\n        preFillColor: prefilColor, \r\n        fillColor: fillcolor,\r\n        url: 'https://brandoncontent.pl/' \r\n      }\r\n    ]\r\n  }\r\n}\r\nexport default function useImageMap() {\r\n  \r\n  const [imageMap, setImageMap] = useState(getDefaultValues());\r\n  return {imageMap,setImageMap} ;\r\n}","\nimport './App.css';\nimport {Stall} from './Components/stall.js'\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n      <Stall></Stall>\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}